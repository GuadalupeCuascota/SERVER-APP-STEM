/*
 * Copyright 2019 VMware, Inc.
 * SPDX-License-Identifier: BSD-2-Clause
 */
//import { ProxyControlImpl } from './proxy.control';
export const GLOBAL = window;
/**
 * Proxy Controls are special messages that facilitate bus operations for the proxy.
 */
export var ProxyControlType;
(function (ProxyControlType) {
    ProxyControlType["RegisterEventBus"] = "Registration";
    ProxyControlType["BusStopListening"] = "Stop Listening";
    ProxyControlType["BusStartListening"] = "Start Listening";
})(ProxyControlType || (ProxyControlType = {}));
/**
 * DTO for transporting messages between distributed event bus instances.
 */
export class BusProxyMessage {
    constructor(payload, channel, type, from) {
        this.control = null;
        this.payload = payload;
        this.channel = channel;
        this.type = type;
        this.from = from;
    }
}
/**
 * ProxyType defines which mode the proxy is operating in.
 * Parent = master bus
 * Child = bus running in an iFrame
 * Hybrid = not yet implemented.
 */
export var ProxyType;
(function (ProxyType) {
    ProxyType["Parent"] = "parent";
    ProxyType["Child"] = "child";
    ProxyType["Hybrid"] = "hybrid";
})(ProxyType || (ProxyType = {}));
//# sourceMappingURL=message.proxy.api.js.map