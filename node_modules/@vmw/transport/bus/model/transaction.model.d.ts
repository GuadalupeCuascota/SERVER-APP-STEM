import { UUID, StoreType } from '../store/store.model';
import { TransactionReceipt } from '../../bus.api';
export interface TransactionRequest {
    channel: string;
    id: UUID;
    payload: any;
    complete: boolean;
    aborted: boolean;
    startedTime: Date;
    completedTime: Date;
    abortedTime: Date;
    nextRequest: TransactionRequest;
    store: StoreType;
}
export declare class TransactionRequestImpl<T> implements TransactionRequest {
    channel: string;
    id: UUID;
    payload: any;
    complete: boolean;
    aborted: boolean;
    startedTime: Date;
    completedTime: Date;
    abortedTime: Date;
    nextRequest: TransactionRequest;
    store: StoreType;
    constructor(channel?: string, payload?: any, store?: StoreType);
}
export declare class TransactionReceiptImpl implements TransactionReceipt {
    totalRequests: number;
    requestsSent: number;
    requestsCompleted: number;
    complete: boolean;
    aborted: boolean;
    startedTime: Date;
    completedTime: Date;
    abortedTime: Date;
    id: UUID;
    constructor(totalRequests: number, id: UUID);
}
