/**
 * Channels for communication with the ReST Service, and its message object.
 */
import { GeneralError } from '../../model/error.model';
import { AbstractFrame } from '../../../bus/model/abstractframe.model';
export declare enum HttpRequest {
    Get = "GET",
    Post = "POST",
    Patch = "PATCH",
    Delete = "DELETE",
    Put = "PUT",
    UpdateGlobalHeaders = "UpdateGlobalHeaders",
    SetRestServiceHostOptions = "SetRestServiceHostOptions",
    DisableCORSAndCredentials = "DisableCORSAndCredentials",
    ConfigureCORSAndCredentials = "ConfigureCORSAndCredentials"
}
export declare enum RestErrorType {
    UnknownMethod = 0
}
/**
 * This is the error class that is returned from the ReST service on HTTP error.
 */
export declare class RestError extends GeneralError {
    message: string;
    status?: number;
    url?: string;
    constructor(message: string, status?: number, url?: string);
}
export declare class RestObject extends AbstractFrame {
    readonly apiClass?: string | null | undefined;
    readonly senderName?: string | null | undefined;
    request: HttpRequest;
    method: HttpRequest;
    uri: string;
    body: any;
    response: any;
    error: any;
    headers: any;
    pathParams: any;
    queryStringParams: any;
    refreshRetries: number;
    constructor(request: HttpRequest, uri: string, body?: any, headers?: any, queryStringParams?: any, pathParams?: any, apiClass?: string | null | undefined, senderName?: string | null | undefined);
}
