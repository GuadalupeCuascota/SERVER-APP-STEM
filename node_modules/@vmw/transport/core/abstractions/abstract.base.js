/*
 * Copyright 2018-2019 VMware, Inc.
 * SPDX-License-Identifier: BSD-2-Clause
 */
import { AbstractCore } from './abstract.core';
import { RestOperations } from '../services/rest/rest.operations';
/**
 * Provides any class access to the EventBus, Rest Operations and higher level operations.
 */
export class AbstractBase extends AbstractCore {
    constructor(name) {
        super();
        this.restOperations = RestOperations.getInstance();
        this.name = name;
    }
    /**
     * Make a call to the rest service.
     * @param operation the operation you want to run
     */
    restServiceRequest(operation) {
        return this.restOperations.restServiceRequest(operation, this.getName());
    }
    /**
     * Set global HTTP headers (made for all calls)
     * @param headers headers will be set for all remote REST calls.
     */
    setGlobalHttpHeaders(headers) {
        this.restOperations.setGlobalHttpHeaders(headers, this.getName());
    }
    /**
     * Change the global host and scheme for local RestService
     * @param host can be a host or an ip, with port.
     * @param scheme 'https' or 'http', supports both
     */
    setGlobalRestServiceHostOptions(host, scheme) {
        this.restOperations.setRestServiceHostOptions(host, scheme, this.getName());
    }
    /**
     * Enable automatic XSRF token handling.
     */
    enableXsrfTokenHandling() {
        this.fabric.setXsrfTokenEnabled(true);
    }
    /**
     * Disable automatic XSRF token handling.
     */
    disableXsrfTokenHandling() {
        this.fabric.setXsrfTokenEnabled(false);
    }
    /**
     * Enable Dev Mode.
     * > Disables CORS and credentials for local RestService
     * @deprecated See {@link disableCorsAndCredentials}
     */
    enableDevMode() {
        this.log.warn(`Application set to dev mode, not to be used in production`);
        this.restOperations.disableCorsAndCredentials(this.getName());
    }
    /**
     * Configure CORS and credentials policies.
     * @param corsMode
     * @param credentialsMode
     */
    configureCorsAndCredentials(corsMode, credentialsMode) {
        this.restOperations.configureCorsAndCredentials(corsMode, credentialsMode, this.getName());
    }
    getName() {
        return this.name;
    }
}
//# sourceMappingURL=abstract.base.js.map