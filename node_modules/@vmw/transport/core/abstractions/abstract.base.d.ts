import { BusTransaction, EventBusEnabled } from '../../bus.api';
import { AbstractCore } from './abstract.core';
import { RestOperation, RestOperations } from '../services/rest/rest.operations';
import { RequestCorsMode, RequestCredentialsMode } from '../services/rest/rest.service';
/**
 * Provides any class access to the EventBus, Rest Operations and higher level operations.
 */
export declare abstract class AbstractBase extends AbstractCore implements EventBusEnabled {
    protected name: string;
    protected restOperations: RestOperations;
    /**
     * Make a call to the rest service.
     * @param operation the operation you want to run
     */
    protected restServiceRequest(operation: RestOperation): BusTransaction;
    /**
     * Set global HTTP headers (made for all calls)
     * @param headers headers will be set for all remote REST calls.
     */
    protected setGlobalHttpHeaders(headers: any): void;
    /**
     * Change the global host and scheme for local RestService
     * @param host can be a host or an ip, with port.
     * @param scheme 'https' or 'http', supports both
     */
    protected setGlobalRestServiceHostOptions(host: string, scheme: string): void;
    /**
     * Enable automatic XSRF token handling.
     */
    protected enableXsrfTokenHandling(): void;
    /**
     * Disable automatic XSRF token handling.
     */
    protected disableXsrfTokenHandling(): void;
    /**
     * Enable Dev Mode.
     * > Disables CORS and credentials for local RestService
     * @deprecated See {@link disableCorsAndCredentials}
     */
    protected enableDevMode(): void;
    /**
     * Configure CORS and credentials policies.
     * @param corsMode
     * @param credentialsMode
     */
    protected configureCorsAndCredentials(corsMode: RequestCorsMode, credentialsMode: RequestCredentialsMode): void;
    getName(): string;
    protected constructor(name: string);
}
