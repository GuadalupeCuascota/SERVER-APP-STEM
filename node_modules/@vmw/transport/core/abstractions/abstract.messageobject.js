/*
 * Copyright 2018-2019 VMware, Inc.
 * SPDX-License-Identifier: BSD-2-Clause
 */
/**
 * This is the abstract class for both request and response objects passed in messages to/from services
 */
import { AbstractFrame } from '../../bus/model/abstractframe.model';
export class AbstractMessageObject extends AbstractFrame {
    /**
     * The AbstractMessageObject is the superclass for all service request and response objects.
     * Optional parameters are necessary for creating empty Response objects in typescript with generics
     *
     * @param request - enumerated TRequest
     * @param channel - string channel for service requests
     * @param payload - request and response payloads
     * @param headers - message headers
     */
    constructor(request, channel, payload, headers) {
        super();
        this.request = request;
        this.channel = channel;
        this.payload = payload;
        this.headers = headers;
    }
}
//# sourceMappingURL=abstract.messageobject.js.map