import { EventBus } from '../bus.api';
import { LogLevel } from '../log';
/**
 * Test utility to encapsulate bus operations for test runs.
 */
export declare class BusUtil {
    /**
     * Get instance of the current bus instance.
     * @returns {EventBus} the bus
     */
    static getBusInstance(): EventBus;
    /**
     * Boot and create a singleton EventBus instance with default options
     * @returns {EventBus} the bus.
     */
    static bootBus(): EventBus;
    /**
     * Boot and create a singleton EventBus instance with custom options for logging level and boot message
     * @param {LogLevel} logLevel log level to set
     * @param {boolean} disableBootMessage set to true to turn off the boot message.
     * @param {boolean} darkTheme enables dark theme friendly logging output (defaults to off).
     * @returns {EventBus} the bus
     */
    static bootBusWithOptions(logLevel: LogLevel, disableBootMessage: boolean, darkTheme?: boolean): EventBus;
    /**
     * Destroy the bus.
     */
    static destroy(): void;
    /**
     * Return connection string used to establish and manage one or more Fabric connections.
     *
     * @param {string} host hostname where Fabric backend is served
     * @param {number} port port where Fabric backend is served
     * @param {string} endpoint target endpoint
     *
     * @deprecated Use GeneralUtil.getFabricConnectionString()
     */
    static getFabricConnectionString(host: string, port: number, endpoint: string): string;
}
